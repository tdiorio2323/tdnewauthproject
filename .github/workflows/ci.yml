name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Checkout base branch
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base

      - name: Install base dependencies
        if: ${{ github.event_name == 'pull_request' }}
        run: npm ci
        working-directory: base

      - name: Run base coverage
        if: ${{ github.event_name == 'pull_request' }}
        run: npm run coverage
        working-directory: base

      - name: Run tests
        run: npm run test

      - name: Coverage
        run: npm run coverage

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/lcov.info
          fail_ci_if_error: false

      - name: Compare coverage with base
        if: ${{ github.event_name == 'pull_request' }}
        id: compare
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const corePath = process.env.GITHUB_OUTPUT;
          function readPct(p) {
            try {
              const d = JSON.parse(fs.readFileSync(p, 'utf8'));
              return d.total?.lines?.pct ?? 0;
            } catch {
              return 0;
            }
          }
          const basePct = readPct('base/coverage/coverage-summary.json');
          const prPct = readPct('coverage/coverage-summary.json');
          const decreased = prPct < basePct;
          fs.appendFileSync(corePath, `base=${basePct}\n`);
          fs.appendFileSync(corePath, `pr=${prPct}\n`);
          fs.appendFileSync(corePath, `decreased=${decreased}\n`);
          NODE

      - name: Fail if coverage decreased
        if: ${{ github.event_name == 'pull_request' && steps.compare.outputs.decreased == 'true' }}
        run: |
          echo "Coverage decreased: base=${{ steps.compare.outputs.base }} PR=${{ steps.compare.outputs.pr }}" >&2
          exit 1

      - name: Generate coverage comment
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          node - <<'NODE'
          const fs = require('fs');
          const p = 'coverage/coverage-summary.json';
          if (!fs.existsSync(p)) {
            fs.writeFileSync('coverage.md', 'No coverage summary found');
            process.exit(0);
          }
          const data = JSON.parse(fs.readFileSync(p, 'utf8'));
          const t = data.total || {};
          const get = k => (t[k] && typeof t[k].pct === 'number' ? t[k].pct.toFixed(1) : '0.0');
          let base = process.env.BASE_PCT || '';
          let pr = process.env.PR_PCT || '';
          if (fs.existsSync('base/coverage/coverage-summary.json')) {
            try {
              const bd = JSON.parse(fs.readFileSync('base/coverage/coverage-summary.json', 'utf8'));
              base = (bd.total?.lines?.pct ?? 0).toFixed(1);
              pr = (t.lines?.pct ?? 0).toFixed(1);
            } catch {}
          }
          const md = [
            '### Coverage Report',
            '',
            `- Statements: ${get('statements')}%`,
            `- Branches: ${get('branches')}%`,
            `- Functions: ${get('functions')}%`,
            `- Lines: ${get('lines')}%`,
            base ? `- Lines (base vs PR): ${base}% â†’ ${pr}%` : '',
            '',
            '> Generated by Vitest'
          ].join('\n');
          fs.writeFileSync('coverage.md', md);
          NODE

      - name: Post coverage comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage-report
          path: coverage.md

      - name: Build
        run: npm run build
